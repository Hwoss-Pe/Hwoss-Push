<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3f3390d7-2ffd-47e3-9bfa-0233f336a4ce" name="默认变更列表" comment="完成xxl夜间屏蔽任务的逻辑，时间到就消费redis里面的key对应list进行一个延迟缓冲发送，在配置类会去创建对应的夜间HwossJob，SendJob没有实现，逻辑一样的，不多写代码http://localhost:8080/xxl-job-admin直接去创建会更加方便">
      <change afterPath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/config/NightShieldConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/handler/NightShieldLazyPendingHandler.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web/src/main/java/com/hwoss/web/controller/DataController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web/src/main/java/com/hwoss/web/service/DataService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/com/common/vo/BasicResultVo.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/com/common/vo/BasicResultVo.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/constant/XxlJobConstant.java" beforeDir="false" afterPath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/constant/XxlJobConstant.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/service/CronTaskService.java" beforeDir="false" afterPath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/service/CronTaskService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/service/impl/CronTaskServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/service/impl/CronTaskServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/logs/info.log" beforeDir="false" afterPath="$PROJECT_DIR$/logs/info.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/stream/src/main/java/com/hwoss/utils/LettuceRedisUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/stream/src/main/java/com/hwoss/utils/LettuceRedisUtils.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/main/resources/application.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="Enum" />
        <option value="AnnotationType" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--follow-tags" />
        <option name="title" value="Current Branch" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/handler/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/utils/XxlJobUtils.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/xxl/service/CronTaskService.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/config/CronAsyncThreadPoolConfig.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/handler/CronTaskHandler.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/service/TaskHandler.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/mq/rabbitMq/RabbitMqAdminConfig.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/mq/rabbitMq/RabbitSendMqServiceImpl.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/service/impl/TaskHandlerImpl.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/constants/PendingConstant.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/java/com/hwoss/MessageApplication.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/utils/TaskInfoUtils.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api/src/main/java/com/hwoss/service/api/service/SendService.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/utils/ContentHolderUtil.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/utils/ThreadPoolUtils.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/config/ThreadPoolExecutorShutdownDefinition.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/service/ConfigService.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/service/impl/ConfigServiceImpl.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/serivce/SendServiceImpl.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/consoles/db/e2e2d227-28fc-42ba-a46c-c5f5209ffa65/console.sql" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$MAVEN_REPOSITORY$/de/siegmar/logback-gelf/3.0.0/logback-gelf-3.0.0.pom" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/config/PipeLineConfig.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/handler/src/main/java/com/hwoss/handler/config/TaskPipelineConfig.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/handler/src/main/java/com/hwoss/handler/receiver/rabbit/RabbitMqReceiver.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/resources/application.properties" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/mq/SendMqService.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/java/com/hwoss/web/controller/SendController.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/business/send/SendAfterCheckBusiness.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/business/send/SendPreCheckBusiness.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/support/src/main/java/com/hwoss/suport/mq/kafka/KafkaSendMqServiceImpl.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/business/send/SendAssembleBusiness.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/java/com/hwoss/web/controller/DataController.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/business/recall/RecallMQBusiness.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/stream/src/main/java/com/hwoss/business/MapFunction.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/stream/src/main/java/com/hwoss/utils/LettuceRedisUtils.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/java/com/hwoss/web/service/DataService.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api-impl/src/main/java/com/hwoss/service/impl/business/send/SendMQBusiness.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/resources/logback.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/web/src/main/resources/local.properties" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/config/NightShieldConfig.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/handler/NightShieldLazyPendingHandler.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/handler/src/main/java/com/hwoss/handler/receiver/service/ConsumeService.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cron/pom.xml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/common/src/main/java/com/common/enums/AnchorState.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service-api/src/main/java/com/hwoss/service/api/pojo/TraceResponse.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/common/src/main/java/com/common/domain/SimpleTaskInfo.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/handler/src/main/java/com/hwoss/handler/receiver/kafka/Receiver.java" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="2g5ydCZt57OWtc0CtrY6Whz3kIQ" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
    <option name="showModules" value="false" />
  </component>
  <component name="PropertiesComponent">
    <property name="DatabaseDriversLRU" value="mysql" />
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="ExpandSpringBootJavaOptionsPanel" value="true" />
    <property name="Repository.Attach.Annotations" value="false" />
    <property name="Repository.Attach.JavaDocs" value="false" />
    <property name="Repository.Attach.Sources" value="false" />
    <property name="RequestMappingsPanelOrder0" value="0" />
    <property name="RequestMappingsPanelOrder1" value="1" />
    <property name="RequestMappingsPanelWidth0" value="75" />
    <property name="RequestMappingsPanelWidth1" value="75" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.intellij.openapi.externalSystem.service.settings.ExternalSystemGroupConfigurable" value="SELECTIVE" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../xxl-job-2.3.0/xxl-job-2.3.0" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="模块" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.5274869" />
    <property name="settings.editor.selected.configurable" value="MavenSettings" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\messsagePushing\cron\src\main\java\com\hwoss\cron\xxl" />
      <recent name="D:\messsagePushing\web\src\main\resources" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.hwoss.cron.config" />
      <recent name="config" />
      <recent name="com.hwoss.cron.utils" />
      <recent name="com.hwoss.cron.vo" />
      <recent name="com.hwoss.cron.xxl.constant" />
    </key>
  </component>
  <component name="RunManager" selected="Spring Boot.MessageApplication">
    <configuration name="HwossBootStrap" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="INCLUDE_PROVIDED_SCOPE" value="true" />
      <option name="MAIN_CLASS_NAME" value="com.hwoss.HwossBootStrap" />
      <module name="stream" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.hwoss.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
      <option name="arquillianRunConfiguration">
        <value>
          <option name="containerStateName" value="" />
        </value>
      </option>
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MessageApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="web" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.hwoss.MessageApplication" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SHORTEN_COMMAND_LINE" value="NONE" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Spring Boot.MessageApplication" />
      <item itemvalue="应用程序.HwossBootStrap" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.MessageApplication" />
        <item itemvalue="应用程序.HwossBootStrap" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="3f3390d7-2ffd-47e3-9bfa-0233f336a4ce" name="默认变更列表" comment="" />
      <created>1715001818677</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715001818677</updated>
      <workItem from="1715001819922" duration="28000" />
      <workItem from="1715001963226" duration="532000" />
      <workItem from="1715002707691" duration="6231000" />
      <workItem from="1715093817702" duration="4289000" />
      <workItem from="1715146356459" duration="404000" />
      <workItem from="1715157220047" duration="4956000" />
      <workItem from="1715166486546" duration="752000" />
      <workItem from="1715167316539" duration="158000" />
      <workItem from="1715167514100" duration="2317000" />
      <workItem from="1715178056276" duration="3575000" />
      <workItem from="1715238011187" duration="3848000" />
      <workItem from="1715262432069" duration="5282000" />
      <workItem from="1715269456354" duration="513000" />
      <workItem from="1715270141696" duration="821000" />
      <workItem from="1715326115791" duration="8552000" />
      <workItem from="1715341398581" duration="6518000" />
      <workItem from="1715411478714" duration="6834000" />
      <workItem from="1715435534269" duration="6601000" />
      <workItem from="1715499587658" duration="9787000" />
      <workItem from="1715519861479" duration="6369000" />
      <workItem from="1715582946582" duration="3383000" />
      <workItem from="1715586495864" duration="2239000" />
      <workItem from="1715606126755" duration="4906000" />
      <workItem from="1715611119758" duration="6153000" />
      <workItem from="1715667400810" duration="7319000" />
      <workItem from="1715676900901" duration="1037000" />
      <workItem from="1715700483053" duration="37000" />
      <workItem from="1715762648351" duration="11818000" />
      <workItem from="1715786427148" duration="1193000" />
      <workItem from="1715787680709" duration="374000" />
      <workItem from="1715788104080" duration="159000" />
      <workItem from="1715788286870" duration="61000" />
      <workItem from="1715788374459" duration="2530000" />
      <workItem from="1715840733565" duration="12105000" />
      <workItem from="1715864511576" duration="10018000" />
      <workItem from="1715914383972" duration="617000" />
      <workItem from="1715932896026" duration="5678000" />
      <workItem from="1715951606510" duration="717000" />
      <workItem from="1716104288569" duration="18698000" />
      <workItem from="1716191964129" duration="12355000" />
      <workItem from="1716277617562" duration="3903000" />
      <workItem from="1716283504580" duration="13199000" />
      <workItem from="1716366796362" duration="5466000" />
      <workItem from="1716376820045" duration="4104000" />
      <workItem from="1716386713612" duration="5505000" />
      <workItem from="1716447331036" duration="698000" />
      <workItem from="1716448247642" duration="17142000" />
      <workItem from="1716537374215" duration="2819000" />
      <workItem from="1716542384000" duration="9131000" />
      <workItem from="1716710968470" duration="20880000" />
      <workItem from="1716790395801" duration="5446000" />
      <workItem from="1716811685681" duration="12412000" />
      <workItem from="1716876694099" duration="133000" />
      <workItem from="1716876855214" duration="9901000" />
    </task>
    <task id="LOCAL-00012" summary="增加请求和响应的对象封装，请求通过去区分相响应内容区分撤回信息还是发送信息，对于对应的设置消息内容，区别好bizId和bussId，然后封装到SimpleTask进行执行，这样封装就保证请求一个然后扇出处理">
      <created>1715331650699</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1715331650699</updated>
    </task>
    <task id="LOCAL-00013" summary="责任链接口的实现设计，自定义责任链异常处理">
      <created>1715335275986</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1715335275986</updated>
    </task>
    <task id="LOCAL-00014" summary="编写责任链ProcessController，并且做预检查，也就是ProcessTemplate(某个责任链模板)，通过责任链去获取业务列表List&lt;BusinessProcess&gt;&#10;再去获取对应的模板获取业务列表然后执行，泛化问题不知道是否有影响代码运行，还没调试">
      <created>1715344507072</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1715344507072</updated>
    </task>
    <task id="LOCAL-00015" summary="增加ContentModel用来对于不同渠道的数据进行划分，理解SM，PM，BM的关系，只有BM是真正作用在业务层进行操作，因此对于创建出需要用的模型的时候就去实现PM，然后设置到Context里面，最后用ProcessController进行传递上下文就行">
      <created>1715348067821</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1715348067821</updated>
    </task>
    <task id="LOCAL-00016" summary="实现接口send,但是ProcessController还需要进行注入">
      <created>1715348946504</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1715348946504</updated>
    </task>
    <task id="LOCAL-00017" summary="为责任量配置业务的进行，配置类PipeLine，好像要加扫描包路径才能扫到对应的业务包，这里也为项目启动的时候映射出code和对应ProcessTemplate，由Controller后去对应的ProcessTemplate后进行所运用的业务链子，总的来说就是启动组装对应的链子。&#10;做了请求的前置检查用stream流">
      <created>1715416943947</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1715416943947</updated>
    </task>
    <task id="LOCAL-00018" summary="常量设计，引入jpa的相关用法实现在MessageTemplateDao里面，以及TaskInfo和对应的MessTemplate数据进行组装，运用Optional类型，优化jdk8前比较丑陋的写法，衍生出多种api">
      <created>1715442671766</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1715442671766</updated>
    </task>
    <task id="LOCAL-00019" summary="定义枚举类ChannelType，并且对不同的渠道分别建立模型，都去实现对应的变量，定义了枚举接口，让其他枚举继承后重写必有得code和description方法&#10;在assembleTaskInfoList组装参数，目前到替换占位符，这块用spring的api去实现">
      <created>1715505824969</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1715505824969</updated>
    </task>
    <task id="LOCAL-00020" summary="对占位符理解后，首先要去PropertyPlaceholderHelper，然后构造的时候传入对应的前后缀，然后执行replacePlaceholders，传入origin，还有PlaceholderResolver接口，这个可以拿一个类去实现，这里存疑对Object类的无参构造，重写resolvePlaceholder保证map里面有占位符要的数据是一样的，返回实际的值，最后在replacePlaceholders完成替换">
      <created>1715508078358</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1715508078358</updated>
    </task>
    <task id="LOCAL-00021" summary="拼装参数SendAssembleBusiness写完,这里用hutool包去调用反射的工具，如果自己写的话需要大量反射的tryCatch出来，用ReflectUtil会好很多">
      <created>1715509320079</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1715509320079</updated>
    </task>
    <task id="LOCAL-00022" summary="对接收者的数据进行正则校验">
      <created>1715522836406</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1715522836406</updated>
    </task>
    <task id="LOCAL-00023" summary="整理自用">
      <created>1715526102379</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1715526102379</updated>
    </task>
    <task id="LOCAL-00024" summary="增加对应发送mq的样例，这里创建的mq配置类只进行发送，并没有使用@Listener去自动创建，因此进行原始构建，采用的是TopicQueue">
      <created>1715608093258</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1715608093259</updated>
    </task>
    <task id="LOCAL-00025" summary="这里对于挎包引入对应的自动装配，采用包名一样，然后在配置类进行扫描包设置对应的路径就行">
      <created>1715612114619</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1715612114619</updated>
    </task>
    <task id="LOCAL-00026" summary="业务链路基本走通，并且正确发送到MQ，查正则替换数据那块没查">
      <created>1715617319648</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1715617319649</updated>
    </task>
    <task id="LOCAL-00027" summary="单个消息发送业务完成">
      <created>1715669284205</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1715669284205</updated>
    </task>
    <task id="LOCAL-00028" summary="消息撤回下发到mq完成">
      <created>1715677624794</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1715677624794</updated>
    </task>
    <task id="LOCAL-00029" summary="kafka测试，kafka的接入思路是一个topic多个消费组去消费，然后再去开线程池">
      <created>1715773812599</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1715773812599</updated>
    </task>
    <task id="LOCAL-00030" summary="增加线程池配置类，把线程池交给spring管理进行优雅关闭&#10;编写一点消费类service">
      <created>1715786743088</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1715786743088</updated>
    </task>
    <task id="LOCAL-00031" summary="记录bug：某些依赖必须在父工程引入后才能在子工程引入，比如&#10; &lt;dependency&gt;&#10;                            &lt;groupId&gt;io.github.lyh200&lt;/groupId&gt;&#10;                            &lt;artifactId&gt;dynamic-tp-spring-boot-starter-apollo&lt;/artifactId&gt;&#10;                            &lt;version&gt;1.0.2&lt;/version&gt;&#10;                        &lt;/dependency&gt;&#10;也可能是其他问题导致，恶心">
      <created>1715790851789</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1715790851789</updated>
    </task>
    <task id="LOCAL-00032" summary="做了两个map映射，一个是渠道和对应的处理器，一个是渠道和对应的线程池，在启动时就把对应的渠道消息和动态线程池都加进去&#10;这里补充动态线程池的做法，当创建对应的线程池后，交给Dtp进行注册，然后再给spring也注册，spring通过监听关闭事件来进行处理优雅关闭&#10;然后在TaskPipelineConfig大致定义了handler处理类责任链模式逻辑，注意引入不同的ProcessController，通过不同的业务，来指定引入不同的bean，然后封装好对应的业务逻辑，然后定义多线程消费对应的数据Task&#10;业务逻辑就是启动的时候注册多个ProcessController，进行map的多层映射，然后在service引入不同的对象，就可以执行不同逻辑&#10;&#10;最后进入了monitor4all.logRecord进行一个切面日志的原理，减少代码入侵转而用一种注解的方式实现">
      <created>1715849439815</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1715849439815</updated>
    </task>
    <task id="LOCAL-00033" summary="需要接入redis，但不知道是dtp还是log包需要强依赖于redis">
      <created>1715853123332</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1715853123332</updated>
    </task>
    <task id="LOCAL-00034" summary="这里的mq策略就是一个队列来储存对应的信息，这个信息通过不同的key进行send和recall的分类，注册到请求头后对应消费端进行获取，然后再去执行逻辑">
      <created>1715872368790</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1715872368790</updated>
    </task>
    <task id="LOCAL-00035" summary="实现消费的接口，对于撤回直接执行，对于发送去走一遍责任链">
      <created>1715873696340</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1715873696340</updated>
    </task>
    <task id="LOCAL-00036" summary="编写redis工具封装类，以及配置中心配置名单过滤，编写lua脚本">
      <created>1715952312992</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1715952312992</updated>
    </task>
    <task id="LOCAL-00037" summary="编写夜间屏蔽逻辑，以及对去重的初步实现，注意设计模式和抽象类的运用">
      <created>1716112237397</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1716112237397</updated>
    </task>
    <task id="LOCAL-00038" summary="完成两个去重要求的逻辑，以及lua脚本理解编写">
      <created>1716127062777</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1716127062777</updated>
    </task>
    <task id="LOCAL-00039" summary="去重逻辑记录：&#10;首先，当 Spring 创建 ContentDeduplicationBuilder 实例时，因为他被@Service修饰，会首先调用它的构造方法。在这个构造方法中，deduplicationType 被赋值。然后执行init()注册到holder里面。&#10;其次是对应的builder实现类里面去实现Builder接口时候，借助中间抽象类已经把当前对应的deduplicationType读到，那么就可以调用抽象类根据对应的deduplicationType获取对应的配置参数，还可以做锚点。&#10;&#10;整个流程：&#10;首先，整个初始化的时候就会把holder映射给它填满对应的type和service以及builder，那么对应具体的业务builder就会去获取对应配置类从而获取真正的参数DeduplicationParam进行赋值&#10;关于limitService和的方法映射也是接口实现的，它的抽象类主要是去配置获取所有key的方法和单个key的方法,其中的获取单个key方法由具体的ContentDeduplicationService去实现获取单个key的方法，不过他是需要传入AbstractDeduplicationService，然后去调用该实现类获取单个方法。可以说依赖于Dup的方法，然后具体limit去实现他的filter就行&#10;用的应该是模板设计模式">
      <created>1716130313042</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1716130313042</updated>
    </task>
    <task id="LOCAL-00040" summary="完成整个消息去重操作">
      <created>1716132452686</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1716132452686</updated>
    </task>
    <task id="LOCAL-00041" summary="完成限流操作&#10;先完成自定义注解，通过注解来决定具体的实现类的类型，用注解里的属性可选，编写对应FlowControlParam存储对应的初始限流器和限流策略，限流大小RateLimiter，&#10;FlowControlFactory存储对应的不同限流方式，对应不同服务的map，在初始化的时候通过上下文进行反射去找注解，然后把对应的类获取后通过注解找到类型映射完成。编写对应获取服务配置类，以配置中心为准，flowControl主方法进行限流操作，对于阻塞时间进行一个日志记录">
      <created>1716197378553</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1716197378553</updated>
    </task>
    <task id="LOCAL-00042" summary="完成Handler的对应抽象类">
      <created>1716198398950</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1716198398950</updated>
    </task>
    <task id="LOCAL-00043" summary="编写ChannelAccountDao，把远程url文件传输到本地路径">
      <created>1716219384931</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1716219384931</updated>
    </task>
    <task id="LOCAL-00044" summary="编写邮件发送的实现类具体逻辑，">
      <created>1716220777407</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1716220777407</updated>
    </task>
    <task id="LOCAL-00045" summary="编写邮件发送的实现类具体逻辑，">
      <created>1716220848552</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1716220848552</updated>
    </task>
    <task id="LOCAL-00046" summary="编写邮件发送的实现类具体逻辑，">
      <created>1716220877265</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1716220877265</updated>
    </task>
    <task id="LOCAL-00047" summary="对于短信分发逻辑，SmsHandler主要编写逻辑，理清楚渠道账号和对应的模板，调用对应的渠道短信的时候，先去获取配置中心，对权重比可以进行设置，采用负载均衡的思想进行分流，如果模板有对应的渠道就直接用渠道账号的脚本，如果走的是配置中心上的脚本，就采用服务器分发，定义了大致的sms框架逻辑">
      <created>1716305229132</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1716305229133</updated>
    </task>
    <task id="LOCAL-00048" summary="对于获取所有改渠道的账号进行遍历找到需要的脚本，编写腾讯云的短信脚本，以及拉取回执信息">
      <created>1716369146785</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1716369146785</updated>
    </task>
    <task id="LOCAL-00049" summary="对smsHandler设置后，进行发送消息后把数据存储到数据库">
      <created>1716369861819</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1716369861819</updated>
    </task>
    <task id="LOCAL-00050" summary="配置单线程池去拉取短信回执，采用轮询的方式获取，以及健康接口">
      <created>1716379729759</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1716379729759</updated>
    </task>
    <task id="LOCAL-00051" summary="编写kafka消费类，这里去处理信息的思路单topic多消费者组&#10;对于每个topic用他们的渠道加消息类型构成，ReceiverStart去初始化的时候获取Receiver的所有对应的实例，对于每个实例采用AnnotationEnhancer去增强KafkaListener注解，获取类名.方法的形式然后把原本KafkaListener属性groupId的属性值进行初始化，那么这样容器里面就有消费不同topic的各种实例">
      <created>1716473098713</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1716473098713</updated>
    </task>
    <task id="LOCAL-00052" summary="kafka消费的时候通过@Header(KafkaHeaders.GROUP_ID)去获取当前消费者组，通过对比传过来的任务的类型，通过渠道加消息类型也能找到一个消费者组id，对比两个id是否一样进行消费，对于消费组信息的时候要ConsumerRecord&lt;?,String&gt; consumerRecord更加规范，再去转化各种类型，也能防止非空判断的丑代码">
      <created>1716476935759</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1716476935759</updated>
    </task>
    <task id="LOCAL-00053" summary="定时任务处理的线程池">
      <created>1716480708632</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1716480708632</updated>
    </task>
    <task id="LOCAL-00054" summary="xxl-job接入配置">
      <created>1716551031324</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1716551031324</updated>
    </task>
    <task id="LOCAL-00055" summary="对xxl-job进行部分实现，对有关执行器组的id获取和构建，工具类的编写，注意版本只有2.3.0进行兼容">
      <created>1716717439865</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1716717439866</updated>
    </task>
    <task id="LOCAL-00056" summary="对xxl-job进行部分实现，对有关执行器组的id获取和构建，工具类的编写，注意版本只有2.3.0进行兼容，这里的操作实际上就是复刻3以下执行器和执行任务的实体类，然后作为参数发送http给到另一个xxl服务进行操作就行">
      <created>1716719818648</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1716719818648</updated>
    </task>
    <task id="LOCAL-00057" summary="对定时任务的增删改，以及暂停开始的一些封装">
      <created>1716722049135</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1716722049135</updated>
    </task>
    <task id="LOCAL-00058" summary="完成读取csv文件进行一行行读取，读取后就放到对应的阻塞队列里面，当阈值达到就批量发送一次定时任务">
      <created>1716733680126</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1716733680126</updated>
    </task>
    <task id="LOCAL-00059" summary="人群文件上传以及controller">
      <created>1716811730567</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1716811730567</updated>
    </task>
    <task id="LOCAL-00060" summary="接入flink到springboot，这里还是编写完成stream模块，单纯启动他会给一个随机端口作为web页面打开就能看到运行，用flink把之前log.print的锚点信息进行处理，HwossSink去实现SinkFunction&lt;AnchorInfo&gt;，把字符串读到后处理成这个类，然后把数据存入redis里面，这样就到时就能直接链路追踪的时候直接访问redis，分模块操作，他们之间通过kafka的log队列读到信息，并让flink结合kafka，读到信息后就写到redis里面&#10;&#10;修复一下文件读取bug以及发送逻辑的责任链，夜间屏蔽逻辑">
      <created>1716822901927</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1716822901927</updated>
    </task>
    <option name="localTasksCounter" value="61" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="false" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="实现消费的接口，对于撤回直接执行，对于发送去走一遍责任链" />
    <MESSAGE value="编写redis工具封装类，以及配置中心配置名单过滤，编写lua脚本" />
    <MESSAGE value="编写夜间屏蔽逻辑，以及对去重的初步实现，注意设计模式和抽象类的运用" />
    <MESSAGE value="完成两个去重要求的逻辑，以及lua脚本理解编写" />
    <MESSAGE value="去重逻辑记录：&#10;首先，当 Spring 创建 ContentDeduplicationBuilder 实例时，因为他被@Service修饰，会首先调用它的构造方法。在这个构造方法中，deduplicationType 被赋值。然后执行init()注册到holder里面。&#10;其次是对应的builder实现类里面去实现Builder接口时候，借助中间抽象类已经把当前对应的deduplicationType读到，那么就可以调用抽象类根据对应的deduplicationType获取对应的配置参数，还可以做锚点。&#10;&#10;整个流程：&#10;首先，整个初始化的时候就会把holder映射给它填满对应的type和service以及builder，那么对应具体的业务builder就会去获取对应配置类从而获取真正的参数DeduplicationParam进行赋值&#10;关于limitService和的方法映射也是接口实现的，它的抽象类主要是去配置获取所有key的方法和单个key的方法,其中的获取单个key方法由具体的ContentDeduplicationService去实现获取单个key的方法，不过他是需要传入AbstractDeduplicationService，然后去调用该实现类获取单个方法。可以说依赖于Dup的方法，然后具体limit去实现他的filter就行&#10;用的应该是模板设计模式" />
    <MESSAGE value="完成整个消息去重操作" />
    <MESSAGE value="完成限流操作&#10;先完成自定义注解，通过注解来决定具体的实现类的类型，用注解里的属性可选，编写对应FlowControlParam存储对应的初始限流器和限流策略，限流大小RateLimiter，&#10;FlowControlFactory存储对应的不同限流方式，对应不同服务的map，在初始化的时候通过上下文进行反射去找注解，然后把对应的类获取后通过注解找到类型映射完成。编写对应获取服务配置类，以配置中心为准，flowControl主方法进行限流操作，对于阻塞时间进行一个日志记录" />
    <MESSAGE value="完成Handler的对应抽象类" />
    <MESSAGE value="编写ChannelAccountDao，把远程url文件传输到本地路径" />
    <MESSAGE value="编写邮件发送的实现类具体逻辑，" />
    <MESSAGE value="对于短信分发逻辑，SmsHandler主要编写逻辑，理清楚渠道账号和对应的模板，调用对应的渠道短信的时候，先去获取配置中心，对权重比可以进行设置，采用负载均衡的思想进行分流，如果模板有对应的渠道就直接用渠道账号的脚本，如果走的是配置中心上的脚本，就采用服务器分发，定义了大致的sms框架逻辑" />
    <MESSAGE value="对于获取所有改渠道的账号进行遍历找到需要的脚本，编写腾讯云的短信脚本，以及拉取回执信息" />
    <MESSAGE value="对smsHandler设置后，进行发送消息后把数据存储到数据库" />
    <MESSAGE value="配置单线程池去拉取短信回执，采用轮询的方式获取，以及健康接口" />
    <MESSAGE value="编写kafka消费类，这里去处理信息的思路单topic多消费者组&#10;对于每个topic用他们的渠道加消息类型构成，ReceiverStart去初始化的时候获取Receiver的所有对应的实例，对于每个实例采用AnnotationEnhancer去增强KafkaListener注解，获取类名.方法的形式然后把原本KafkaListener属性groupId的属性值进行初始化，那么这样容器里面就有消费不同topic的各种实例" />
    <MESSAGE value="kafka消费的时候通过@Header(KafkaHeaders.GROUP_ID)去获取当前消费者组，通过对比传过来的任务的类型，通过渠道加消息类型也能找到一个消费者组id，对比两个id是否一样进行消费，对于消费组信息的时候要ConsumerRecord&lt;?,String&gt; consumerRecord更加规范，再去转化各种类型，也能防止非空判断的丑代码" />
    <MESSAGE value="定时任务处理的线程池" />
    <MESSAGE value="xxl-job接入配置" />
    <MESSAGE value="对xxl-job进行部分实现，对有关执行器组的id获取和构建，工具类的编写，注意版本只有2.3.0进行兼容" />
    <MESSAGE value="对xxl-job进行部分实现，对有关执行器组的id获取和构建，工具类的编写，注意版本只有2.3.0进行兼容，这里的操作实际上就是复刻3以下执行器和执行任务的实体类，然后作为参数发送http给到另一个xxl服务进行操作就行" />
    <MESSAGE value="对定时任务的增删改，以及暂停开始的一些封装" />
    <MESSAGE value="完成读取csv文件进行一行行读取，读取后就放到对应的阻塞队列里面，当阈值达到就批量发送一次定时任务" />
    <MESSAGE value="人群文件上传以及controller" />
    <MESSAGE value="接入flink到springboot，这里还是编写完成stream模块，单纯启动他会给一个随机端口作为web页面打开就能看到运行，用flink把之前log.print的锚点信息进行处理，HwossSink去实现SinkFunction&lt;AnchorInfo&gt;，把字符串读到后处理成这个类，然后把数据存入redis里面，这样就到时就能直接链路追踪的时候直接访问redis，分模块操作，他们之间通过kafka的log队列读到信息，并让flink结合kafka，读到信息后就写到redis里面&#10;&#10;修复一下文件读取bug以及发送逻辑的责任链，夜间屏蔽逻辑" />
    <MESSAGE value="完成xxl夜间屏蔽任务的逻辑，时间到就消费redis里面的key对应list进行一个延迟缓冲发送，在配置类会去创建对应的夜间HwossJob，SendJob没有实现，逻辑一样的，不多写代码http://localhost:8080/xxl-job-admin直接去创建会更加方便" />
    <option name="LAST_COMMIT_MESSAGE" value="完成xxl夜间屏蔽任务的逻辑，时间到就消费redis里面的key对应list进行一个延迟缓冲发送，在配置类会去创建对应的夜间HwossJob，SendJob没有实现，逻辑一样的，不多写代码http://localhost:8080/xxl-job-admin直接去创建会更加方便" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/handler/src/main/java/com/hwoss/handler/receiver/rabbit/RabbitMqReceiver.java</url>
          <line>43</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/handler/src/main/java/com/hwoss/handler/handler/impl/SmsHandler.java</url>
          <line>74</line>
          <option name="timeStamp" value="37" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/stream/src/main/java/com/hwoss/sink/HwossSink.java</url>
          <line>30</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/handler/NightShieldLazyPendingHandler.java</url>
          <line>42</line>
          <option name="timeStamp" value="66" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/cron/src/main/java/com/hwoss/cron/config/NightShieldConfig.java</url>
          <line>59</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>